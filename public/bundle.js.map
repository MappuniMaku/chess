{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/constants.ts","webpack:///./src/ts/bundle.ts","webpack:///./src/ts/app.ts","webpack:///./src/ts/types.ts","webpack:///./src/ts/figures.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","CONSTANTS","BOARD_SIZE","CELL_SIZE","LETTERS_START_CODE","charCodeAt","$root","document","getElementById","App","root","figures","FigureType","King","FigureKing","props","board","$board","$figures","this","createBoard","createFigures","x","y","row","Math","floor","col","cell","event","rect","getBoundingClientRect","clientX","left","clientY","top","convertCoordsToCell","figure","getBoardCell","highlightCells","getCellsToMove","newDiv","append","addFigureOnBoard","Player","White","cells","querySelectorAll","forEach","$el","classList","remove","$cell","add","type","player","$figure","toString","style","String","addEventListener","onBoardClick","$lettersRow","$emptyCell","$letterCell","textContent","fromCharCode","$row","$numberCell","push","j","cloneNode","query","querySelector","tag","className","el","createElement","currentCell","result"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export const CONSTANTS = {\n    BOARD_SIZE: 8,\n    CELL_SIZE: 50,\n    LETTERS_START_CODE: 'a'.charCodeAt(0),\n};","import { App } from './app';\nconst $root = document.getElementById('root');\nif ($root) {\n    const app = new App({ root: $root });\n}","import { AppParams, Cell, IFigure, FigureType, FiguresList, Player, BoardCell } from './types';\nimport { FigureKing } from './figures';\nimport { CONSTANTS } from './constants';\n\nconst { BOARD_SIZE, CELL_SIZE, LETTERS_START_CODE } = CONSTANTS;\n\nconst figures = {\n    [FigureType.King]: FigureKing,\n}\n\nexport class App {\n    board: ((BoardCell)[])[] = [];\n\n    $root: HTMLElement;\n    $board: HTMLElement | null = null;\n    $figures: HTMLElement | null = null;\n\n    constructor(props: AppParams) {\n        this.$root = props.root;\n        this.createBoard();\n        this.createFigures();\n    }\n\n    convertCoordsToCell(x: number, y: number): Cell | null {\n        if (\n            x < CELL_SIZE || y < CELL_SIZE ||\n            x > CELL_SIZE * (BOARD_SIZE + 1) || y > CELL_SIZE * (BOARD_SIZE + 1)\n        ) return null;\n\n        // remove headings offsets\n        y -= CELL_SIZE;\n        x -= CELL_SIZE;\n\n        return { row: Math.floor(y / CELL_SIZE), col: Math.floor(x / CELL_SIZE) };\n    }\n\n    getBoardCell(cell: Cell): BoardCell {\n        return this.board[cell.row][cell.col];\n    }\n\n    onBoardClick(event: MouseEvent): void {\n        const rect = this.$board?.getBoundingClientRect();\n        if (!rect) return;\n\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        const cell = this.convertCoordsToCell(x, y);\n\n        if (cell === null) return;\n\n        const { figure } = this.getBoardCell(cell);\n        if (figure !== null) {\n            this.highlightCells(figure.getCellsToMove(cell));\n        }\n    }\n\n    createFigures(): void {\n        this.$figures = this.newDiv('Chess__figures');\n        this.$board?.append(this.$figures);\n\n        this.addFigureOnBoard(FigureType.King, Player.White, { row: 5, col: 5 });\n    }\n\n    highlightCells(cells: Cell[]) {\n        this.$board?.querySelectorAll('Chess__cell--highlighted').forEach(($el) => {\n            $el.classList.remove('Chess__cell--highlighted');\n        });\n\n        cells.forEach(cell => {\n            const { $cell } = this.getBoardCell(cell);\n            $cell.classList.add('Chess__cell--highlighted');\n        });\n    }\n\n    addFigureOnBoard(type: FigureType, player: Player, cell: Cell) {\n        const $figure = this.newDiv(\n            `Chess__figure Chess__figure--${player.toString()} Chess__figure--${type.toString()}`);\n        $figure.style.left = `${String(CELL_SIZE * (cell.row + 1))}px`;\n        $figure.style.top = `${String(CELL_SIZE * (cell.col + 1))}px`;\n        this.$figures?.append($figure);\n\n        this.getBoardCell(cell).figure = new figures[type]();\n    }\n\n    createBoard() {\n        this.$board = this.newDiv('Chess__board');\n        this.$board.addEventListener('click', this.onBoardClick.bind(this));\n\n        // create letters row\n        const $lettersRow = this.newDiv('Chess__row');\n        this.$board.append($lettersRow);\n\n        // create empty cell for spacing and add it to start of letters headings\n        const $emptyCell = this.newDiv('Chess__cell');\n        $lettersRow.append($emptyCell);\n\n        for (let i = 0; i < BOARD_SIZE; i++) {\n            // create heading letter cells\n            const $letterCell = this.newDiv('Chess__cell Chess__cell--heading');\n            $letterCell.textContent = String.fromCharCode(LETTERS_START_CODE + i);\n            $lettersRow.append($letterCell);\n\n            // create row\n            const $row = this.newDiv('Chess__row');\n\n            // create heading number cell\n            const $numberCell = this.newDiv('Chess__cell Chess__cell--heading');\n            $numberCell.textContent = String(BOARD_SIZE - i);\n            $row.append($numberCell);\n\n            // create row in virtual copy of board\n            this.board.push([]);\n\n            // create main chess cells\n            for (let j = 0; j < BOARD_SIZE; j++) {\n                const $cell = this.newDiv('Chess__cell Chess__cell--main');\n                $row.append($cell);\n\n                // create place for figures in virtual copy of board\n                this.board[i].push({ $cell, figure: null });\n            }\n\n            $row.append($numberCell.cloneNode(true));\n            this.$board.append($row);\n        }\n\n        // add empty cell to end of letters headings\n        $lettersRow.append($emptyCell.cloneNode());\n        this.$board.append($lettersRow.cloneNode(true));\n\n        this.$root.append(this.$board);\n    }\n\n    getElement(query: string): HTMLElement | null {\n        return this.$root.querySelector(query);\n    }\n\n    createElement(tag: string, className = ''): HTMLElement {\n        const el = document.createElement(tag);\n        if (className) {\n            el.className = className;\n        }\n        return el;\n    }\n\n    newDiv(className = ''): HTMLElement {\n        return this.createElement('div', className);\n    }\n}","export type Cell = {\n    row: number,\n    col: number,\n}\n\nexport type AppParams = {\n    root: HTMLElement,\n}\n\nexport interface IFigure {\n    getCellsToMove(currentCell: Cell): Cell[],\n}\n\nexport type BoardCell = {\n    $cell: HTMLElement,\n    figure: IFigure | null,\n}\n\nexport enum FigureType {\n    King = 'king'/*,\n    Queen = 'queen',\n    Rook = 'rook',\n    Bishop = 'bishop',\n    Knight = 'knight',\n    Pawn = 'pawn',*/\n}\n\nexport enum Player {\n    White = 'white',\n    Black = 'black',\n}\n\nexport type FiguresList = Record<FigureType, IFigure>","import { Cell, IFigure } from './types';\nimport { CONSTANTS } from './constants';\n\nconst { BOARD_SIZE } = CONSTANTS;\n\nexport class FigureKing implements IFigure {\n    getCellsToMove(currentCell: Cell): Cell[] {\n        const result: Cell[] = [];\n        const { col, row } = currentCell;\n\n        for (let i = row - 1; i <= row + 1; i++) {\n            for (let j = col - 1; j <= col + 1; j++) {\n                if (\n                    i > 0 && j > 0 &&\n                    i < BOARD_SIZE && j < BOARD_SIZE &&\n                    !(i === col && j === row)\n                ) {\n                    result.push({ row: i, col: j });\n                }\n            }\n        }\n\n        return result;\n    }\n}"],"sourceRoot":""}